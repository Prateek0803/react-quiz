{"version":3,"sources":["data.js","App.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","App","useState","currQuestion","setCurrQuestion","showScore","setShowScore","score","setScore","setCorrectAns","className","length","onClick","map","ans","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMACaA,G,MAAY,CACrB,CACIC,aAAc,iCACdC,cAAe,CACX,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAG3C,CACIH,aAAc,uBACdC,cAAe,CACX,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAG/C,CACIH,aAAc,2CACdC,cAAe,CACX,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAG9C,CACIH,aAAc,yCACdC,cAAe,CACX,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,OC0B3BC,MAzDf,WAAgB,IAAD,EACyBC,mBAAS,GADlC,mBACPC,EADO,KACMC,EADN,OAEmBF,oBAAS,GAF5B,mBAEPG,EAFO,KAEGC,EAFH,OAGWJ,mBAAS,GAHpB,mBAGPK,EAHO,KAGDC,EAHC,OAIqBN,oBAAS,GAJ9B,mBAIIO,GAJJ,WA6Bb,OACE,qBAAKC,UAAU,MAAf,SACGL,EACC,sBAAKK,UAAU,gBAAf,UACE,6CAAgBH,EAAhB,WAA+BX,EAAUe,UACzC,wBAAQD,UAAU,MAAME,QAXX,WACnBN,GAAa,GACbF,EAAgB,GAChBI,EAAS,IAQH,sBAGA,qCACE,sBAAKE,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6CAAgBP,EAAa,KAD/B,IAC0CP,EAAUe,UAEpD,qBAAKD,UAAU,gBAAf,SACE,6BAAKd,EAAUO,GAAcN,oBAGjC,qBAAKa,UAAU,iBAAf,SACGd,EAAUO,GAAcL,cAAce,KAAI,SAACC,GAC1C,OAAO,wBAAQJ,UAAU,MAAME,QAAS,kBAzCnC,IAyCqDE,EAAId,YAxCxEQ,EAASD,EAAM,GACfE,GAAc,IAGhBA,GAAc,QAEXN,EAAeP,EAAUe,OAAO,EAEjCP,EAAgBD,EAAa,GAG7BG,GAAa,KA6BI,SAAoEQ,EAAIf,wBChD/FgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9dd99f4a.chunk.js","sourcesContent":["// Just a sample data gonna change\r\nexport const questions = [\r\n    {\r\n        questionText: 'What is the capital of France?',\r\n        answerOptions: [\r\n            { answerText: 'New York', isCorrect: false },\r\n            { answerText: 'London', isCorrect: false },\r\n            { answerText: 'Paris', isCorrect: true },\r\n            { answerText: 'Dublin', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'Who is CEO of Tesla?',\r\n        answerOptions: [\r\n            { answerText: 'Jeff Bezos', isCorrect: false },\r\n            { answerText: 'Elon Musk', isCorrect: true },\r\n            { answerText: 'Bill Gates', isCorrect: false },\r\n            { answerText: 'Tony Stark', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'The iPhone was created by which company?',\r\n        answerOptions: [\r\n            { answerText: 'Apple', isCorrect: true },\r\n            { answerText: 'Intel', isCorrect: false },\r\n            { answerText: 'Amazon', isCorrect: false },\r\n            { answerText: 'Microsoft', isCorrect: false },\r\n        ],\r\n    },\r\n    {\r\n        questionText: 'How many Harry Potter books are there?',\r\n        answerOptions: [\r\n            { answerText: '1', isCorrect: false },\r\n            { answerText: '4', isCorrect: false },\r\n            { answerText: '6', isCorrect: false },\r\n            { answerText: '7', isCorrect: true },\r\n        ],\r\n    },\r\n];","import React,{useState} from 'react'\nimport './App.css';\nimport {questions} from './data'\n\nfunction App() {\n  const[currQuestion,setCurrQuestion] = useState(0);\n  const[showScore,setShowScore] = useState(false);\n  const[score,setScore] = useState(0);\n  const[correctAns,setCorrectAns] = useState(false)\n\n  const submitHandler = (isCorrect)=>{\n    if(isCorrect === true){\n      setScore(score+1);\n      setCorrectAns(true)\n    }\n    \n    setCorrectAns(false);\n\n    if(currQuestion < questions.length-1)\n    {\n      setCurrQuestion(currQuestion+1);\n    }\n    else{\n      setShowScore(true);\n    }\n  }\n\n  const resetHandler = ()=>{\n    setShowScore(false)\n    setCurrQuestion(0)\n    setScore(0)\n  }\n\n  return (\n    <div className=\"App\">\n      {showScore?(\n        <div className=\"score-section\">\n          <h2>You scored {score} out of {questions.length}</h2>\n          <button className=\"btn\" onClick={resetHandler}>Reset</button>\n        </div>\n      ) : (  \n          <> \n            <div className=\"questions-section\">\n              <div className=\"question-count\">\n                <span>Question {currQuestion+1}</span>/{questions.length}\n              </div>\n              <div className=\"question-text\">\n                <h2>{questions[currQuestion].questionText}</h2>\n              </div>\n            </div>\n            <div className=\"answer-section\">\n              {questions[currQuestion].answerOptions.map((ans)=>{\n                return <button className=\"btn\" onClick={()=>submitHandler(ans.isCorrect)}>{ans.answerText}</button>\n              })}\n            </div>\n          </>\n       )}\n        </div> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}